services:
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - bluegeolock_network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka
    networks:
      - bluegeolock_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "coordinates:2:1"
    depends_on:
      - zookeeper

  postgres:
    image: postgres:13
    networks:
      - bluegeolock_network
    environment:
      POSTGRES_DB: gps_tracking
      POSTGRES_PASSWORD: tracking_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql

  producer:
    build: ./producers
    networks:
      - bluegeolock_network
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: on-failure

  consumer:
    build: ./consumer
    networks:
      - bluegeolock_network
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - POSTGRES_HOST=postgres
    restart: on-failure

  api:
    build: ./api
    networks:
      - bluegeolock_network
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres

  frontend:
    image: nginx
    networks:
      - bluegeolock_network
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./img:/usr/share/nginx/html/img
    ports:
      - "8080:80"

volumes:
  postgres_data:

networks:
  bluegeolock_network:
    driver: bridge